services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args: {}
    volumes:
      - ..:/workspace:cached
      - node_modules_devcontainer:/workspace/node_modules
      - next_cache_devcontainer:/workspace/.next
      - storybook_cache_devcontainer:/workspace/.storybook-cache
      - zsh_history_devcontainer:/home/node/.zsh_history:z
    command: sleep infinity
    ports:
      - "${APP_PORT-3000}:${APP_PORT-3000}"
      - "${STORYBOOK_PORT-6006}:${STORYBOOK_PORT-6006}"
      - "${PRSIMA_PORT-5555}:${PRISMA_PORT-5555}"
    env_file:
      - ../.env.devcontainer
    environment:
      - TZ=Etc/UTC
    user: node
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dev_net
    deploy:
      resources:
        limits:
          cpus: "24.0"
          memory: 24GB

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data_devcontainer:/var/lib/postgresql/data
    env_file:
      - ../.env.devcontainer
    environment:
      - POSTGRES_USER=${POSTGRES_USER-devuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-devpassword}
      - POSTGRES_DB=${POSTGRES_DB-devdb}
      - TZ=${TIMEZONE-America/Sao_Paulo}
      - PGTZ=${TIMEZONE-America/Sao_Paulo}
    ports:
      - "${DB_PORT-5432}:${DB_PORT-5432}"
    networks:
      - dev_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "8.0"
          memory: 8GB

  cognee-mcp:
    container_name: cognee-mcp
    networks:
      - dev_net
    volumes:
      - cognee_data_devcontainer:/workspace/.roo/cognee
    env_file:
      - ../.env.devcontainer
    build:
      # Change context to project root (relative to .devcontainer/)
      context: ..
      # Specify Dockerfile path relative to the new context
      dockerfile: ./.roo/cognee/Dockerfile
    environment:
      - ENVIRONMENT=${COGNEE_ENV-local}
      - TOKENIZERS_PARALLELISM=${COGNEE_TOKENIZERS_PARALLELISM-false}
      - LLM_API_KEY=${COGNEE_LLM_API_KEY}
      - LLM_MODEL=${COGNEE_LLM_MODEL-gemini/gemini-2.0-flash}
      - LLM_PROVIDER=${COGNEE_LLM_PROVIDER-gemini}
      - LLM_ENDPOINT=${COGNEE_LLM_ENDPOINT-}
      - LLM_API_VERSION=${COGNEE_LLM_API_VERSION-}
      - LLM_MAX_TOKENS=${COGNEE_LLM_MAX_TOKENS-16384}
      - EMBEDDING_PROVIDER=${COGNEE_EMBEDDING_PROVIDER-gemini}
      - EMBEDDING_API_KEY=${COGNEE_EMBEDDING_API_KEY}
      - EMBEDDING_MODEL=${COGNEE_EMBEDDING_MODEL-gemini/text-embedding-004}
      - EMBEDDING_ENDPOINT=${COGNEE_EMBEDDING_ENDPOINT-}
      - EMBEDDING_API_VERSION=${COGNEE_EMBEDDING_API_VERSION-}
      - EMBEDDING_DIMENSIONS=${COGNEE_EMBEDDING_DIMENSIONS-768}
      - EMBEDDING_MAX_TOKENS=${COGNEE_EMBEDDING_MAX_TOKENS-2048}
      - GRAPH_DATABASE_PROVIDER=${COGNEE_GRAPH_DATABASE_PROVIDER-networkx}
      - VECTOR_DB_PROVIDER=${COGNEE_VECTOR_DB_PROVIDER-lancedb}
      - DB_PROVIDER=${COGNEE_DB_PROVIDER-sqlite}
      - DB_NAME=${COGNEE_DB_NAME-cognee_db}
      - SSE_HOST=${COGNEE_SSE_HOST-0.0.0.0}
      - SSE_PORT=${COGNEE_SSE_PORT-8000}
    deploy:
      resources:
        limits:
          cpus: "8.0"
          memory: 8GB
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - ${COGNEE_SSE_PORT-8000}:${COGNEE_SSE_PORT-8000}

volumes:
  node_modules_devcontainer:
  next_cache_devcontainer:
  storybook_cache_devcontainer:
  postgres_data_devcontainer:
  zsh_history_devcontainer:
  cognee_data_devcontainer:

networks:
  dev_net:
    driver: bridge
